#include <stdio.h>
#include <stdlib.h>

int cmp(const void *a, const void *b) { return *(int *)a - *(int *)b; }

int main() {
    int n, head, size, dir, rq[100], i, seek = 0;
    printf("Enter number of requests, head position, disk size, direction (1 for high, 0 for low): ");
    scanf("%d%d%d%d", &n, &head, &size, &dir);
    
    printf("Enter request queue: ");
    for (i = 0; i < n; i++) scanf("%d", &rq[i]);
    qsort(rq, n, sizeof(int), cmp);
    
    printf("Head movement: %d", head);
    if (dir) {
        for (i = 0; i < n; i++) if (rq[i] >= head) printf(" -> %d", rq[i]), seek += abs(head - rq[i]), head = rq[i];
        printf(" -> %d -> 0", size - 1); seek += abs(head - (size - 1)) + (size - 1);
        head = 0;
        for (i = 0; i < n && rq[i] < head; i++) printf(" -> %d", rq[i]), seek += abs(head - rq[i]), head = rq[i];
    } else {
        for (i = n - 1; i >= 0; i--) if (rq[i] <= head) printf(" -> %d", rq[i]), seek += abs(head - rq[i]), head = rq[i];
        printf(" -> 0 -> %d", size - 1); seek += abs(head - 0) + (size - 1);
        head = size - 1;
        for (i = n - 1; i >= 0 && rq[i] > head; i--) printf(" -> %d", rq[i]), seek += abs(head - rq[i]), head = rq[i];
    }
    printf("\nTotal seek time: %d\n", seek);
    return 0;
}
